[
    {
        "post_id": "143tfrg",
        "author": "imspoiled",
        "title": "I feel like I know nothing about coding?",
        "url": "https://www.reddit.com/r/csMajors/comments/143tfrg/i_feel_like_i_know_nothing_about_coding/",
        "score": 429,
        "num_comments": 110,
        "created_utc": 1686182564.0,
        "selftext": "I was a gamer as a child and always got encouraged to study comp sci by my parents. I\u2019ve taken AP Comp Sci A and AP Comp Sci Principles in highschool which was my first introduction to actual coding. Mainly Java, which I thoroughly enjoyed. Went to a CC for 2 years where I learned C++ and MARIE Assembly. Also enjoyed. Im now a rising junior at a 4 year university majoring in Computer Science and I feel like I\u2019m super behind in terms of building my career as a SWE. Github is incredibly confusing to me, even after watching tutorials. I have no idea what half of the terms exchanged in this subreddit mean. I\u2019m even struggling with the easy level leetcode prompts. An internship right now isn\u2019t even in the question because of my lacking resume. What do I even do at this point? Take a bootcamp course?",
        "permalink": "/r/csMajors/comments/143tfrg/i_feel_like_i_know_nothing_about_coding/",
        "comments": [
            "https://preview.redd.it/1udgnpz9cp4b1.jpeg?width=750&format=pjpg&auto=webp&s=5803ec3faace6f0020f9ba0145c012ef55b06023\n\nI have been a professional developer in field for 4 years now and I also feel like I know nothing. In CS there is so much to learn that you will always ALWAYS feel behind, anyone who says otherwise is selling something. Eventually you do just get in the flow of it though, as it\u2019s a career field where you really can never stop learning new things. I have consistently gotten hired for technologies that I don\u2019t know under the basis that I would learn them on the job. Really, just focus on the programming fundamentals and spend as much time as possible building cool stuff to pad out a portfolio and you will be just fine.",
            "You don't mention anything about projects, so I'm gonna assume you don't have any practical coding experience. \n\nBuild a CRUD (create, read, update, delete) web app. Imo it's the best project for a beginner to start with, because it's got a bit of everything. Backend server, front-end, database. There are plenty of tutorials for every step involved. \n\nThe project itself may be simple, but the practical experience of coding is what you really need. How to find answers off the Internet, how to find bugs, etc. No school can teach you this. \n\nI'd recommend doing this without a framework to begin with, because that way you get to understand things more closely. I did mine with PHP and XAMPP's inbuilt server, but that's probably outdated now - maybe someone here can recommend a better language / server to start with.",
            "GitHub - Git \n\nPornhub - porn \n\nSolved.",
            "Every answer here is wrong and intentionally inflammatory. The best way to learn to code is to build something. Choose a project that\u2019s 10% outside your abilities, and make it. Rinse and repeat. Coding seems theoretical until you actually use it.",
            "This is common and isn't unique to SWE/com Sci.  You'll learn way more at work than you ever will in school.  School just gives you some fundamentals and familiarity with the basics of the subject matter.  Knowing that you know nothing and are willing to learn are what companies that are good to work for are looking for.",
            "I began learning how to code when I was in my late twenties.\n\nAt the time, I had no idea that you save code as a plain text file. I thought it was just something that was like \u201cin the computer\u201d somewhere somehow. I also thought that you had to have some kind of super nice/expensive/powerful computer to build programs.\n\nI say that to demonstrate how little I knew. Even learning HTML felt *daunting* to me. I felt like an idiot, and I nearly gave up several times.\n\nEveryone starts out not knowing, because of course they do. How else would you start? Don\u2019t sweat it, if you have learned literally anything about coding at your age, you\u2019re light years ahead of where I was (and I\u2019m a pretty successful programmer).",
            "Same.",
            "Hey friend. CS classes only ever take you so far. It\u2019s kind of like being given hammers and the like, but never really being told how to build a house. Maybe they\u2019ll teach you how to make a plank, or how to build the thatching of a roof, but you\u2019re not going to know how to effectively and synergistically combine these things until you use them for whatever reason you like.\n\nI knew the concept of object oriented programming, all these algorithms and what not, but they didn\u2019t really **do** anything for me. If you asked me to build an app that did much of anything, I wouldn\u2019t be able to, despite having all the knowledge to be able to.\n\nThis was until I built my first app, and I had to figure out how I could do what I wanted. That\u2019s when everything came together; a teacher can explain to you 500 times why OOP is so revolutionary and why x is important, but until you actually try to develop something, its importance won\u2019t sink in.\n\nThe difference between you and the best programmers at your school is that the best programmers at your school have experimented with code in their own time.",
            "one step at a time young jedi - CS is a wide,all-encompassing field.  Stick with the basics and proceed at your own pace",
            "Do everything you can to get an internship. This is the best experience you can get early on. You get to learn and do real work in a real environment. Companies don't expect you to have a great resume, that's what internships are for.",
            "You're not behind at all. You're doing great. I'll give some perspective based on my experience:\n\n1. You will never feel like you know enough about coding. When I was an intern, the people I looked up to as engineering wizards confessed that they still felt they had a lot to learn, and made many mistakes. The brilliant software architects made mistakes we all learned from, and now, even with a CS PhD and 14 years after I graduated with my bachelor's in CS, 2 years at MSFT, and 2 years as a senior developer owning an entire product's codebase, I still write code without any certainty that my engineering decisions were the best ones. In fact, I'd say that devs who get used to learning more information as quickly as possible because they never know enough are the best at landing a job and growing into their role.\n\n\n2. There are two types of knowledge in software engineering: computer theory, and practical experience. A bootcamp dev will maximize their practice building software with the latest and greatest toolkits, whereas a 4-year BS grad will know a lot more about how *all* computers and code work, regardless of platform. Productive software engineers develop a healthy mix of both types. Not knowing practical tools is certainly something to work on, but if you're getting data structures and theory training, that knowledge is not only harder to learn on the job, it's much more powerful. A bootcamp grad will blank when they see a new platform or new language. A BS grad will blank on *every* platform and language, but they're used to it. The BS grad can fall back on their core computing knowledge to intuit what the computer *must* be doing, and reverse engineer the code to figure out what it says. The bootcamp grad will need to figure that out the hard way.\n\nSo all is not lost! My first internship was as a junior with no prior projects or experience. I just nailed a few technical interviews and got an offer. I learned C++ basically on the job, alongside engineering best practices. It was great!",
            "ya you don\u2019t have much experience so you prob don\u2019t know much. keep up the good work and a few years into your first job youll feel a bit closer",
            "Have you tried to actually build something? All the lectures in the world and leetcode won\u2019t do anything until you actually get some hands on experience. I didn\u2019t understand anything during lectures until I actually tried to build something, it took me hours of looking things up on stack overflow but that\u2019s how you learn, not by just watching lectures.",
            "I validate your feelings. I understand. \n\nDo you want someone to help you through this? If so, you can DM me. I'd be happy to help.",
            "First of all, internships are not out of the picture for you. I am a sophomore with no experience and I got an internship relatively easily < 30 applications (3 offers). At these interviews, none of them asked leetcode questions.\n\nWhat\u2019s important is scoring interviews and showing that you have a drive to learn. They will teach you. In the 2 months I\u2019ve been at my internship I\u2019ve learned more than my 2 years at college.",
            "If you have no desire to build something on your own and just go to class only, you\u2019ll have a hard time pursuing swe.",
            "The coding world is a lot bigger than hardcore Java, C++ and Javascript coding. There are plenty of coding jobs where you dont need to know leetcode.\n\nTake a look at RPA (UIPath) and low code development (Microsoft Power Platform, OutSystems, Oracle, Apex and 10+ others) .\n\nRPA and low code dev are relatively unknown (everyone is focussing on javascript frameworks and python) because they're new (the business world discovered it just the last 3\\~5 years) so if you start now you're ahead of the competition before everyone knows about them.",
            "Get good at a language. Use that as a base, and from there make some apps. These apps don\u2019t have to be used by anybody and can be cool proof of concept (you can use ChatGPT to give you ideas / help you figure out errors or more features to include). \n\nYou should focus on building these apps and focus on 0 to 1 deployment ie learn all of the things that go into an app. These things wether it\u2019s aws, docker, some flavor of cicd tool to automate building/ deployment, and git will give you invaluable resume experience you can comfortably talk about in interviews and put on your resume.\n\nIn college I learned how to program, but I didn\u2019t learn what companies and markets at a whole want. My advice would be to learn these things earlier for a more competitive edge. \n\nI would recommend going for some kind of aws cert. if you feel comfortable go for dev associate or solution architect associate or if not go for cloud practitioner. From what the market is wanting right now it is hugeeee meaning cloud tech. \n\nMake sure you remain passionate about it and don\u2019t get burnt out there are so many languages and frameworks and tools that exist it will burn you out trying to know it all. So specialize and get really good at a group of them.\n\nThis is what I would recommend, but I don\u2019t know everything either, just food for thought.",
            "Since you can\u2019t get an internship, you need to better your programming skills.\n\n- Take stock of what you know well, know of, and know nothing of. That last category will be the longest one, so pick items to learn. \n\n- Learn how to use a shell.\n\n- Pick a simple project and push the idea as far as you can. \n\nFor example: Make a tic toe game that is playable in the console. Move it over to a gui. Add a database to tally win records and win streaks for specific players. Try to implement networking to make it two player. Try to make a server to host games. Etc etc.\n\n- Learn about tools related to programming, for example an IDE, a debugger, git, GitHub, a profiler\n\n- Watch programming conference talks. You most like won\u2019t understand them, so pause and make sure to research what they\u2019re talking about.\n\n- Interact with other programmers. On discord, it\u2019s super helpful to just read questions that people ask and see the answers people give. You will learn new stuff.\n\n- Don\u2019t be afraid to fail.",
            "It\u2019s all BS man.  Half the languages are just some morons brain fart that other morons latched onto.  Declarative languages (SQL, etc) are the only ones that make any actual sense.\n\nThe best thing I can tell you is to get the degree and get your first job.  The real world is totally different than the made up fantasy land that is college.\n\nPS\n\nMost computer science professors are fucking idiots that couldn\u2019t hack it in the real world.",
            "None of these comments are useful. \n\nLook up what Git is. Look up what version control in general is. Github is a simply a website that does the Git version control but in a manner such that lots of people can interact with it and teams can work together instead of it just being local, like plain old Git. You use it to basically upload your code, then other people can make a branch off of your code on their own machine, make changes, and submit them. If they are good changes, you can allow them into your project. Very simple example of what Github is/does. You won't always encounter this in school. We didn't use it until junior or senior year, I just used it outside of school so I learned it that way. \n\nAs far as leetcode, the methods used to solve those problems are learned in a course on Algorithms and Data Structures. Once you have taken that course, you will be equipped, but you will still need to follow guides, memorize and practice.\n\nEdit: if you're referring to terms like TC, FAANG, etc...Those aren't really important to know, they're just spoken here for shorthand. I have a family member at FAANG who didn't even know what FAANG was. Stick around and you'll pick up on them.",
            "Self study 12 hours a day for six month.",
            "Calm down.  Look up first order logic, that's all programming is when it comes down to it.  And who cares about tech companies, garbage hell holes built for a stock price.  If you can program something you're useful.",
            "i\u2019m 41, i\u2019ve been a professional developer for 15 years, imposter syndrome is a thing.\n\ni can take an idea, turn it into code in any of something like a dozen languages (some are quite dusty though), but if you ask me a complicated enough question the first thought i\u2019ll have is \u201cis today the day everyone realizes i\u2019ve been faking it the whole time?\u201d",
            "Don\u2019t get too discouraged with the leetcode problems. I\u2019m a software engineer (worked in logistics, insurance, and fintech) and I solve those types of problems at work routinely but man, I still get hung up on them when they\u2019re presented in leetcode.\n\nLike other folks have recommended, build something small on your own. You\u2019ll generate these problems organically, and have a much better understanding of why they arose and how you solved them. And you\u2019ll have something to show afterwards.\n\nYou\u2019re gonna be fine.",
            "[deleted]",
            "[deleted]",
            "Sorry for being off topic but with the advent of ChatGPT etc. is there any point in learning to code now?",
            "I recommend doing a side project with some friends. Could be anything from an app to a program to training some ML model.",
            "Most of that stuff is buzzword bullshit that'll be gone on a few years when the industry latches on to the next, sexy thing.\n\nLearn it as best you can, but realize in a few years, it'll all be replaced with some new nonsense words.",
            "You learn the most on the job anyway. Git you learn by working in a team and debugging never ending merge conflicts. You will remember painful days so you never need to do it again. (Git rebase) Thats real learning. \nYou learn by building and breaking and fixing. \nJust do LC as much as you can and add some project on your resume. That will get you a job. Anyway nobody expects much from freshers. Dont stress! Enjoy this time. There is no expectation of u. Once you are senior it gets weird cause now you are like supposed to know stuff lol",
            "**Went to a CC for 2 years where I learned C++ and MARIE Assembly** \\- > it's like me in old days .Going cc to learn programming.",
            "I feel like I got through a whole degree without knowing how to apply what I learned to the actual workforce. Software engineering in the corporate world is vastly different from the CS courses I took in college. I just ended up pursuing an adjacent role to SWE though.",
            "Same",
            "Im afraid to say this but you\u2019re going to feel this even if you can build your own compilers unless you\u2019re a victim of the Dunning and Kruger effect in which case you might have deeper problems. You just have to go for it and push through my friend. Just apply for internships. Make a few substantial projects or even better contribute to a production open source project and apply to internships",
            "i second the fact that you learn way more from work. i would say get on linkedin and network with people from startups. most of us started there, and getting an internship at a small startup will allow you to work really closely with a mentor on a simple project. you don\u2019t need experience for every startup; just network with people and find someone you think you\u2019d be most interested in working with and would be interested in working with you. you don\u2019t really start learning until you make those connections and start VERY simple with internships, if that makes sense. best of luck to you",
            "Sounds like you just need practice. Get a few friends together and work on a project. Maybe a game or something like that. Use GitHub to collaborate and get familiar with it",
            "Got a CS degree, been working in the field for 4 years, I've successfully worked at 3 different companies from big corpo to small startups, always left management and my peers satisfied with my work, interviewed for SWE positions and passed myself a good deal of interviews\n\nStill I feel I don't know shit most of the time\n\nIt's part of being a developer, I guess that's also why burnout rate is so high\n\nJust \"learn to roll with it\", you might never feel prepared but if your track record is \"you give me something to do, I may need to ask other people but I will figure out a way to get it done\", then you're good\n\nThe fact that modern development is based on layers upon layers of abstraction really doesn't fucking help",
            "All of those are typical.",
            "I\u2019m a transfer student (upcoming junior) who doesn\u2019t even know how to code, so you\u2019ll be fine",
            "All you have to know is that you can make a computer do shit and soon AI will do it for you!",
            "How did you do in data structures?",
            "Build stuff, no tutorials just googling and you\u2019ll find out you can do pretty much anything with time and grit",
            "A lot of people feel like imposters. But then again, it\u2019s such a big field that you can\u2019t possibly know everything. It\u2019s great to build your own projects, you\u2019ll learn lots from it",
            "Everyone feels it but maybe because you have always been guided and don't know how to bridge between classes that were guiding you to actually solving your own problem with coding. I would see if your CS club or friends are interested in forming a team. Of If it available in your school look up Codepath. It's free and offers training in Android development, ios, cybersecurity. The difference is that it project based and the first half of the course they teach you the tools with three easy projects then you form a team and go through the entire process of making a application. You'll get support from the Codepath team and volunteers and you'll learn stuff like stories, troubleshooting, git, and tickets. If you can't tell I was a student and now a volunteer for this program. You don't need this program as if you are self driven can learn a lot of this on your own. But the idea is basically find a problem. Design a software solution. Plan it out. Break down your plan into actionable items/milestones. Work on action. Commit and push it into git. Complete app. Test it. Commit and push git. Design a new feature. Fork your app. Work on it. Commit and push git. The end goal is to have something to talk about during your interview. The struggles and harsh truths you learn. Don't worry about optimization for your first app. Work on quantity. And when it comes to your first job/internship don't turn it down unless you already have a better offer on the table. My first opportunity wasn't what I wanted but I worked so closely with the developer that I still learned a lot(it was a small startup). When I went for job interviews after graduation it turned out that the problems I faced and learned from the first job did show that I had the right mentality to be offered at three different companies. I did get offered at my dream company and at the moment it feels like a firehouse in terms of what new things I have to learn. Brace being comfortable being uncomfortable. But I am loving every moment of it since my team is supportive and I love the work culture.",
            "For struggling with GitHub, I highly recommend trying out [this game](https://ohmygit.org/) and seeing if it clicks.\n\nI agree with the other people saying do side projects. You end up with something to put on your resume that shows you know how to apply what you learned enough to build something that hopefully actually does something and works. Worst case, you at least end up with something to talk about when they ask about projects you've worked on. The easiest way for me to come up with side projects is to try to build something that makes my life easier or helps fix a problem that an organization might have. Open source projects on github can also be really useful if they allow complete beginners to contribute (even better if they happen to have someone that is willing to walk you through how to make a contribution to their code base). \n\nCS degrees tend to teach a lot of theory that is applicable to most things but it's usually not designed to teach you exactly what you need for a SWE job. The field is too big and changes too fast. For some CS programs, you don't start getting into the things that seem more directly applicable to SWE roles until junior or senior year. You should be able to learn how to do the easy leetcode problems if you've already taken data structures and algorithms.",
            "I got my internship in January off a handful of HTML, JavaScript, Java and C# projects. My internship is entirely in Powershell scripting, which I had to learn from 0, and I like to think I\u2019m doing a good job.\n\nDon\u2019t let your confidence in your knowledge hold you back, because ultimately whatever job you get will teach you how to code their language, with their standards. Focus on showing your ability to learn, and your ability to commit to something with a resume.",
            "Keep doing leetcode, you only need ds and algorithms for it. Start watching solutions and make yourself like solving those problems. I can guarantee that you WILL get a job by the end of this year. Ofc you also need to build at least 1 CRUD app to understand how tf modern websites/apps operate.",
            "A bunch of other comments said it. Nobody knows anything. That's normal. And internship is how you get that practical experience and is absolutely in the question. Your school definitely has ways to help you, and if you're in SWE, they do too. \n\nTrust me, you got this. Reach out. Look for mentorship. An internship isn't that crazy. You're gonna have to be flexible with what you're willing to work on, and where you're willing to go. It isn't uncommon for 1st time internships to be in defense because they hire like crazy.",
            "You'll be fine. This Junior and Senior year is when you need to secure some projects and that will bolster your resume. Take some electives such as embedded applications, database design, object-oriented programming etc.. When your senior year comes around you'll most likely have a senior design/project class, this is a chance to choose a sweet project that you can add to your resume after you graduate. I graduated from a super mid-school and secured a job and internship before graduating, if I can do it then you can too.",
            "imposters syndrome + college not teaching you SWE skills. you'll learn it afterwards, just focus on data structures & algorithms until you graduate.",
            "I think a lot of this is normal; git is confusing AF and there's a lot to learn on the job that you won't learn in school.MIT open course ware has a class called \"the missing semester\" which goes over stuff like git and editors and stuff that you might not have learned in class-- you might find that helpful!  \nEDIT: You don't need former professional experience to get an internship. You can put your current course work, any interesting class projects you've worked on and you should be able to get one.",
            "learn github by doing",
            "The truth is no one does kid",
            "I\u2019m in the same boat as you. I\u2019m gonna start my junior year and I know c++, python, and the basics of what I learn. I use YouTube and try to expand with projects but I just get Imposter Syndrome that I\u2019ve stopped telling people I am a CS major. I feel like a total fraud and don\u2019t know how I\u2019m gonna get any internship or even a job when I\u2019m in the midway of graduating. Jeez thanks for the post tho the comments are very helpful.",
            "Honestly I feel like I\u2019m in over my head in this major. My first semester just started and I\u2019m struggling with precalculus, and I know this major is incredibly math heavy. And this may sound stupid to people but I\u2019m honestly struggling slightly with an assignment where you have to write a problem analysis, an algorithm, and make a flow chart. I plan on rewatching the lecture to understand it better.",
            "I am by no means a master of git, I barely even know what the fuck I'm doing myself as I'm also still pretty new to it in the vast scheme of things. That being said, I think one of the better ways to really start getting familiar w/ git is to just kinda start working on a project and incorporate it into your workflow.",
            "As a self taught programmer who went the IT route, I\u2019m really glad I\u2019m not the only one who feels this way. Never ending imposter syndrome to the max"
        ]
    },
    {
        "post_id": "pe541i",
        "author": "MsftReject",
        "title": "Rejected for full time return offer after Microsoft Internship",
        "url": "https://www.reddit.com/r/csMajors/comments/pe541i/rejected_for_full_time_return_offer_after/",
        "score": 425,
        "num_comments": 141,
        "created_utc": 1630275594.0,
        "selftext": "Yup, it felt devastating, and worse shocking to hear from my manager that I was not being offered a new grad return offer after my internship this summer. I really thought I was on track and neither my manager nor my mentor had made any hints that I was doing poorly. I asked them both weekly if I was on track and they never had anything negative to say.\n\nI can explain more about what happened and the reasons they gave for not extending me an offer in the comments if anyone is interested.\n\nI'm just not sure what the best way to move forward is. Do I grind leetcode again to shoot for new grad offers or should I delay graduation to try and secure another internship next summer? I graduate December and was really thinking I'd be at Microsoft in January.\n\nOnly have 80 LC solved with no DP or backtracking proficiency. Can I grind hard for 2 months and try my best to secure new grad offer in Nov/Dec? And when should I start applying? Thanks",
        "permalink": "/r/csMajors/comments/pe541i/rejected_for_full_time_return_offer_after/",
        "comments": [
            "I don't have advice but I feel for ya homie. Don't let it get ya down too hard though, you got good experience and knowledge from it. Microsoft looks damn good on a resume if you do end up applying to new grad positions this fall. Best of luck homie!",
            "They told you nothing was wrong every week but somehow you weren\u2019t offered a position? Why?",
            "Shit happens,  two times in a row for me. Waiting 3 weeks for other teams to fix dependencies for my project and my manager saying that \" we could not verify that your work was functional\" in my final review. Then you see how other  interns had it easy, just keep your head up  and come back to grinding LC",
            "From what I read in this thread you told management about your mentor issues. I\u2019d have honestly stayed quiet unless there was a serious HR breach. As an intern you were leaving anyways him being cold isn\u2019t really good enough reason to talk to management.\n\nLuckily it\u2019s just an internship and you got it on your resume. Start grinding leetcode and applying. Having MS on your resume should be good to getting interviews! \n\nDon\u2019t stress too much about it and let it be a lesson to you!",
            "Keep your head up! You\u2019ll be fine. \n\nJust focus on recruiting right now. Start applying now and continue practicing for interviews. You can 100% secure an offer before December. \n\nShit happens and you can make it through. What reasons did they give for your rejection?",
            "Happens. Interned at Amazon as a junior, no return offer despite my manager and team being for it. Struggled to find a mediocre full time offer in the middle of COVID and decided to take an internship the summer rafter graduation to try and land a return before I had to go to work at the mediocre company. Did great, got along with everyone, no returns because no headcount. Just managed to land an offer a few days ago for a 200k TC job though after two return offers failing me. Keep grinding and good luck!",
            "[deleted]",
            "Hey, fellow MSFT intern here!\nDid your recruiter give you any feedback in the midpoint connect, about being on-track or your performance in general ? \nYour situation sounds very odd, specially because the whole point of your mentor (and in some way your manager) is to set you up for success.",
            "Dude, you have MSFT on your resume, graduate, keep studying for your technicals and you will end up at another great place - probably doing more interesting work",
            "It seems you're just starting now, let me give you an advice my mom gave me about work. When we are starting, sadly, we need to \"put heads down\" and accept somethings.\nYour mentor seems like was an asshole, but in this case, if i was in your place, I'd have just accept the treatment without reporting to manager, focused on finishing all my work and after getting an offer I'd change teams.\nI can assure you the reason you didn't get the offer was this.\nLesson learned, in a bad way but learned, but if it makes you feel better: it sounds like you definitely did well skill wise.\nYou got Microsoft, I'm sure you cab get something even better.\nSo go to the grind and go after it, having microsoft internship on your resume is definitely a big difference too.\nWish you all the best and lucky with your next steps!",
            "Not getting a return offer is tough, and although it\u2019s mostly related to performance, it\u2019s also a reflection of your mentor and management team. MSFT and other big tech put a lot of upfront investment into interns and new grads, so when the mentorship team can\u2019t deliver on the company\u2019s investment, it definitely reflects bad on everyone, not just you. \n\nAs a general rule of thumb moving forward, document EVERYTHING. We can take what you say at face value, but of course not all the details would be known about what happened around week 9. But keeping a detailed log of every interaction with your mentor or manager is helpful proof to present to further leadership if you think there is a problem. Feedback should never be an surprise at the end of your internship, interview, etc. and it\u2019s up to you to keep yourself on track, especially if you end up having a shitty manager or mentor. Keep your head up! There are plenty of new grad offers available.",
            "I think others have covered a lot but as someone who recently hosted interns as well, has been an intern mentor, and was also an intern at one pint in time, all I have to say is your manager failed you.\n\nThey should\u2019ve been clear and consistent with their feedback and helped you grow, which it very much sounds like they didn\u2019t. Regardless of whatever room for improvement you had, your manager limited it heavily. The fault is not yours here.\n\nEither way, you now have a solid company on your resume. I\u2019m sure it feels terrible but you\u2019re set for the future and there will be better places :)",
            "I\u2019ve interned at two companies so here\u2019s what I feel. Firstly, if I ever had a rude mentor, I too would\u2019ve spoken to my manager about it\u2026 like what else was I supposed to do? Goto my rude mentor and ask them kindly to not be rude to me? Lmao.\n\nSecondly, I feel like you just worked in a team that had their egos through the roof, especially your mentor. When you spoke to your manager about your mentor, I\u2019m pretty sure his puny little ego got hurt\u2026 hence the decision in not giving you a return offer.\n\nAll in all, I feel like you dodged a bullet Op. It definitely sucks that it\u2019s MICROSOFT that you didn\u2019t get an offer from\u2026 but I think it may be better working at a lesser prestigious company but have nice team mates rather than the ego maniacs that you seem to have worked with.",
            "Wow this is a major failing of your team both in preparation and in communication.\n\nThe main purpose of the intern program is to find full time hires.\n\nIt's the policy during Microsoft internships (or at least was in the last 2-3 years I have been an intern or full time) to have the intern meet with an HR person 3 times during the summer and at the mid point they explicitly tell you if you are \"on track\" or not to get a full time offer and if you are not to discuss actions you can take in the second half to get to that point.\n\nIf they skipped this with you or no longer do this with interns it's a big mistake.",
            "A lot of people have given you a lot of hope and advice already. So I think by now you know what you have do. Forget it, move on move ahead, grind Leetcode and get another offer. \n\nWhat I can offer you at this point however, is perspective from both sides, as an intern who had no full time offer as well as a first time mentor. I have been in both the shoes. I won't name the companies, but both are FAANG.\n\nMy internship experience was even worse than yours. I was given a side project that no one was interested into. I was never invited into any stand-ups, sprint plannings, grooming sessions etc. My mentor was that typical South Indian who only bonded with people speaking his language, otherwise was just rude to everyone else (nope, not sorry for saying this, I know not all are like that but most of them are in my experience). Same situation where no good feedback was given, no good project was given and there simply wasn't an opportunity to show achievements or improvements. Obviously I wasn't given a full time offer.\n\nWhat I did then was get back to Leetcode, grind, land an interview and crack it in another FAANG. \nFast forward to one year, I am at a position where my work is respected, my knowledge is respected and I am one of the key members in my team now. I was a first time mentor this summer and I made sure not to let my intern get the same experience as I did. I was proactive in helping out, giving as well as collecting genuine feedback. I made sure the intern was comfortable with the work and the team and especially me. I helped the intern with design, implementation and testing all, even if it meant sitting there with the intern on Friday evening till 9 pm over a call. 2 weeks ago the internship ended with a full time offer. May be a year later, you would be writing a post like this and consoling someone just like you. \n\nIt doesn't matter.. forget it. Move on, move ahead. That's not the end of the world. That's not the only company, and neither is the manager and nor the mentor. There are insanely awesome teams, managers and mentors out there and you will find them, don't worry. The silver lining in this is that, when you become a mentor someday, you now know what not to do and how not be an asshole. I hope this helps! All the best for your new adventures!",
            "Put your internship on your resume, it will look good, and don't beat yourself up. Do something for yourself and update that resume. You'll be okay.",
            "Hey bro. Don\u2019t beat yourself up. I was in same situation a year ago . I did an internship in some unknown company , never even heard from them again. Right now I have a job in an unknown company , my internship experience helped me get a job .",
            "Y'know what's the great part about tech? Nobody will ever know that you didn't get a return offer. Nobody calls references or talks to managers. From the perspective of every company you apply to, you are a student with an extremely prestigious internship, and presumably incredible programming skills, looking for their next job. It won't even look weird that you're not returning to MSFT. Plenty of people don't take the return offer; I didn't.\n\nWhat's even better is that this is true. Sure, you didn't get a return offer. That only puts you in the bottom 20% of an internship class with a less than 1% acceptance rate. Sure you may be the student who got a C at Harvard, but you're still at Harvard.",
            "Full time Engineer with a good amount of experience. Fuck Microsoft. \n\nSorry for your experience, though. Continue to study LC, do a project in a language that you love consistently (and post in a public repo), look at other companies like startups that'll get you great hands-on opportunities. I never even got in the door at Microsoft. But I can run laps around my peers who did (and I make more money). It's not about the company, it's about the experience you get, the support and the opportunities for failure and learning. \n\nNow that you know your growth area, go somewhere that will answer your questions, pair program with you, and give you mentorship to grow. \n\nIf you're dead set on Microsoft, they'll come calling after 1-2 years of you being somewhere else anyway.",
            "You seem like a rational individual, let me state in plain spoken wording that there is often ZERO LOGIC to corporate personnel moves.  I just finished about 5 years at J&J, I had probably 3-6 Co ops working with me on any given year, and there was NEVER any plan to retain any of them after their 4 month stints.  \n\nThey will string you along and directors will offer to \u2018mentor\u2019 you (it is a puff piece for their reviews), but so much is up to \u201cwhere you are when\u201d an opportunity opens up.  \n\nIf it\u2019s any consolation I would have taken you/your type of go getter initiative in a heartbeat over any of the seasoned flunkies they would saddle me with.  Keep grinding, get all the honest feedback you can while in your role, and shape yourself in the career direction you want to go.  The other commenters are right, at the EOD you still have Microsoft on your resume, keep tweaking, applying, and get comfortable with rejection but NOT complacent with it. Best of luck.",
            "sorry to hear that. out of curiosity, if you don\u2019t mind, what were the reasons they gave?",
            "I\u2019m curious what the reasons are.",
            "Had the exact same experience in my msft internship. You\u2019ll come back stronger!",
            "Maybe be distasteful advice but who cares bro? Move on. You can anywhere with M on your resume. The subreddit doesn\u2019t give enough credit to the 1M & 1 other great tech companies that exist. You can always circle back with better leverage.",
            "Hi OP, it's bad that you didn't get a return FTE offer.\n\nRegarding the conduct of the mentor, I would agree with others about keeping things 'managable' and not complaining to the manager.\n\nI did intern with one of the investment banks for a swe role, and what I observed was -\n\n1. Most of the manager and mentor are fairly busy, and they would entertain questions as long as it is a high level one, like discussing approaches to the problem, their suggestions to your design doc, etc. They generally don't want to handhold you solving the syntactic issue, or how would you run git commands, or how would you connect your intellij ide with a data source, etc.\n\nThey value keeping things abstracted; you would be more valued if you could resolve the technical issues yourself, while using the meeting time to resolve and discuss the high level stuff.\n\n2. I don't know if this is because of wfh, but the internship in wfh structure has certainly made things more difficult. You could have hopped on to your mentor/ preferably another swe( which you would have connected through your networking) to help you out with some problem. Wfh means, you have to book a slot to catch-up with a mentor for discussing your questions. It has made impromptu syncing difficult, which would have otherwise solved your doubts much more easily.\n\n3. After all you are a part of a team, and unless the other member is genuinely affecting your day to day work, you are expected to work together as a team. Ratting any team member out is the last step that anyone should take, by that time, you should also must have made up mind to switch teams/companies. Remember, no one is going to support you, and you don't have privacy similar to client-attorney privilege, so whatever remarks you make, ultimately is kept in mind of the manager.\n\nThe manager's duty apart from the technical aspects, is to keep things well functioning among the team members, and if the team members don't gel with you, it would certainly make sense for them to not include you (remember this is from the perspective of manager, no matter how much valuable you are as a team member, you should be cohesive with the team otherwise it is difficult to keep them).\n\n4. The ability to talk/write about your project and the high level abstraction that you are able to provide, unfortunately is valued higher than your ability to code. This doesn't mean that no code would be valued more, but the technical abilities of an intern are considered to be at par with other interns, and your ability to sell/market your work matters more to the managers.\n\nUltimately they want a high level overview, which would be used by them to feed the details to higher managerial positions. I had another friend, who didn't talked much about his work, even though he put in a high amount of effort, and he found himself always wanted on the side of being pushed with more work.\n\nFinally don't get discouraged, it is a temporary setback. I know many stories of folks landing up with a better job, so keep your chin up and do your hardwork. It would have been awesome to have a fte offer, but every crisis gives you an opportunity to work hard and maybe land up with a better company!",
            "Listen, something like this happened to me this past summer as well. In my case, my manager was rude and didn't understand the technical aspects of the project because he was a \"business manager\" yet demanded the work to be done on time. I spoke with my mentor about him and he offered to intermediate but I refused because I knew it would just get more complicated. Decided to get on one on one call with my manager and explain him in detail why I couldn't get my work done.\n\n&#x200B;\n\nBut to answer your question: Don't delay your graduation at all. You already have a big name on your resume so just keep applying for full time positions. I have gone through like 25 LC problems and I'm no better than you but this is just a start of the career. Tbh I think I agree with someone's opinion on this thread who mentioned that you dodged a bullet. Toxic work environment/team can be a vibe killer especially when you have to work remotely. Keep your head up champ!",
            "Same thing happened to me at Facebook. Only advice I can give you is to keep your head up. Dec isn't far so apply to as many positions as you can now so you have something locked in.\n\nAs far as your post, it might have hurt you to go to your manager complaining about your mentor. Getting a return offer sometimes feels like a strategic game. It is important to think about other perspectives. Escalating probably showed your manager that you couldn't work well with others and since your mentor was there first and a full timer, it made more sense to not have you on the team so as to avoid future conflicts. Further, mentors and managers are workers who are being evaluated for other opportunities just like you are. Maybe mentoring you was what was going to determine whether your mentor got a promotion or not and it seriously hurt their eval when you complained. At any job, it is not skill that often moves you up. Thinking about the politics of that workplace and how to effectively communicate and form relationships is what ends up being more important so you might want to think on that.\n\nAnother case may be just about metrics and incompetence. Generally, you are supposed to have regular check ins where they tell you how you are doing, find things you can work on then plainly let you know whether you are on track for an offer or not. You are also supposed to have check ins with your recruiter to talk about how you are doing and any discomfort you are experiencing within the team. If these meetings did not happen, it is fair to state so in any evals you are given to review your manager/mentor/recruiter as they did not give you adequate chances for feedback and to give them feedback so you are both on the same page. \n\nDid your mentor have any other interns? Some have offer/reject quotas and you simply might have fallen on the wrong side of that axe too. That was my case with FB. My mentor had 3 interns and from week 2, I was the one not on track despite how much work/growth/actioning I did. Accepted it for what it was and moved on. Later came to learn that it was common to choose a black sheep right off the bat so as to not get their hopes up. Oh well",
            "I'm right there with you man, it hurts. I legit had the same thing happen to me this past summer. Sometimes I have dreams about going back. Literally felt like a slap in the face.",
            "Chin up, still have a lot ahead of you. CS and. Microsoft internship on your resume (even if you didn't get a return offer). Can get into consulting pretty easily and still make a lot of money.",
            "From what I've read so far you pulled the Karen card on your mentor. You even mention that candidates have 8/10 return rates. There is a reason why you end up in the 20%. You sound like you're playing victim in a hindsight 20/20 scenario and came to reddit to seek validation. Think about what you did wrong and not highlight what you thought you did right. But it's a tough situation you're in man, good luck and continue to improve.",
            "Many startups would love to hire you, look for them, they don\u2019t have big budgets, you make less money but get more experience in shorter time and climb the ladder faster in many cases. Then come back to MS at a higher level/salary.",
            "Internships and jobs are not fully based upon how well you are able to write code. I think you are able to write decent code. I think you are missing a critical detail of work which is social skills. You can study leetcode all day and will be passing interviews but if you don't work on your social skills you will realize, you can't get very far. You have to learn how to politic and who you should be in good terms with. If you are getting negative feedback from others while doing productive work, you should change your approach and try to become a memorable intern. They are ultimately trying to see who they can work with long term. They want to be able to get a long with you and share a large piece of life with you. You should maybe talk to a soft skills consultant and try to redress your energy",
            "Bruh what waste a full year of new grad opportunities to do an internship?",
            "This is why I don't really fit in, in any company. Calling people out on their bullshit is as natural as breathing. And I can do it quite eloquently.... it also helps that I have fully assessed everything and have multiple examples of said shitty behavior. Trying to get anyone regardless of age or position to actually be accountable for their actions.... that's how I know I'm in a dream of that is for some reason the norm... it just doesn't happen really\ud83d\ude02",
            "[deleted]",
            "You set your expectations, expectation was not met and you're angry/upset.\n\nSearching for the why to justify your expectation won't help you, if you're in not clear on the reason send them an email and ask for further explanation.",
            "I am sorry to hear that.",
            "Hey man, I\u2019m in a similar boat. Great feedback, expecting full time return offer, didn\u2019t end up getting it for unfortunate reasons. The company usually has a ~80% return offer rate, but this year it was less than half of the usual. Maybe reduced head count (covid-related or not) also screwed you?",
            "I would finish my degree first. You\u2019ve already done the internship. Start applying at other FAANG companies. Start applying at all other companies as well. Why does everyone think they\u2019re supposed to be at FAANG anyway?",
            "Cool wheres my internship at a place like that..",
            "@OP If you\u2019re interested in reading some books about relationship building and communication, I recommend \u201chow to win friends and influence people\u201d by Dale Carnegie, \u201cEmotional Intelligence\u201d by Daniel Goleman, and \u201cCrucial Conversations\u201d by Patterson, Grenny, McMillan and Switzler.",
            "Feel you man",
            "Don\u2019t stress about it. Contrary to popular belief, FAANMG doesn\u2019t just have job reqs to hand out to any candidate that they want. If your team had nothing negative to say it just means they couldn\u2019t justify a junior dev position to their higher-ups. Reach out to other teams and try and use your mentors as a reference.",
            "You probably doged a bullet here tbh. You'll get better opportunities elsewhere. It's definitely upsetting to find out that your hard work throughout the past 12 weeks didn't pay off...but in the grand scheme of things, this setback is insignificant. You got this!",
            "REJECTION IS RE DIRECTION \nDon't sweat it baby, you just being pushed out to be pushed somewhere better",
            "Being a good team player can be a very important factor for\u2026.. how can you imagine to work with the person who keep complaining others?"
        ]
    },
    {
        "post_id": "m2juww",
        "author": "None",
        "title": "We got this.",
        "url": "https://www.reddit.com/r/csMajors/comments/m2juww/we_got_this/",
        "score": 430,
        "num_comments": 48,
        "created_utc": 1615444822.0,
        "selftext": "Here's to another night of studying until 3am. Cheers everyone!",
        "permalink": "/r/csMajors/comments/m2juww/we_got_this/",
        "comments": [
            "Hell nah get that 8 hours. If you want to be productive you gotta have time to let your brain rest\n\nI\u2019ve gotten through this entire degree getting no less then 6 a night",
            "Fuck that I\u2019ve been stuck on a project for the past 5 hours I\u2019m going to bed and try finish it in the morning before it\u2019s due in about 17 hours from now.",
            "Hate all nighters. My last all nighter was in my Junior Year. At one point, my body told me:\u201dIf you pull this off again, I will freak out.\u201d",
            "Amazon",
            "I can only go to 1 am, but I go to bed hating myself since I didn't finish.",
            "It makes me wonder what the point is. Why do I have to work so hard for nothing? I have worked so hard for this degree and yet I have no career prospects after graduation. I feel so unmotivated.",
            "Wonder what life after college will be, sometimes I lay awake thinking about it.",
            "needed this :\u2019(",
            "I don\u2019t miss those days! (Some part of me does, but doing it with friends in the CS lounge) so I feel bad for y\u2019all!",
            "Yes",
            "We're gonna make it",
            "Keep grinding folks",
            "[deleted]",
            "Right there with y'all.",
            "You need time management my guy.",
            "Here's to spending our Spring Break working on projects and catching up on classes.",
            "I\u2019m..so..tired",
            "I have a project due tomorrow at midnight that I've yet to start. It's remaking the Linux tar command in C++. We got this!!\n\nUpdate:\n3am EST. All I have left is the -xf option for tar. So close!!!",
            "I swear I feel like you guys have actual assignments. My classes are an absolute joke. (American Uni somewhere in Europe) Currently have an Algo class and Python. Algo class I just google solutions for the homeworks and Python I\u2019ve been doing professional work for over a year in, which means I can just avoid studying. The only thing I like about this major(at least in this uni) is the fact that for me it\u2019s little time investment, absolutely despise how horrible the teaching is.\n\nP.S. I\u2019m basically done with the major and majority of my previous classes went similar to this, just have senior thesis after this. Learnt almost nothing, but I knew that was the case going to college, it\u2019s the self-teach age."
        ]
    },
    {
        "post_id": "kh1193",
        "author": "dmcandy123",
        "title": "How I went from no summer internship to Amazon in 6 months.",
        "url": "https://www.reddit.com/r/csMajors/comments/kh1193/how_i_went_from_no_summer_internship_to_amazon_in/",
        "score": 430,
        "num_comments": 81,
        "created_utc": 1608494322.0,
        "selftext": "I want to start by acknowledging that I am incredibly lucky for so much of the opportunities in my life. I come from a good suburb outside of Atlanta and have parents who have helped me get to where I am. Right now, I\u2019m a junior in computer engineering at the University of Illinois, which has provided me numerous great opportunities to develop my skills. That being said, I worked really hard to turn around from my shitty situation over the summer.\n\nIn March of last year, I was scheduled to go to Israel for an internship program called Onward. Obviously once COVID happened, my plans for the summer fell apart, and I was left with no real opportunities. I was crushed by this reality, but I chose to use it as a motivator to work harder. During the summer of 2020, I decided to start learning anything I could about software engineering by making a series of projects based on my skills and passions, while making money on the side by delivering for Uber Eats. I started by making a Spotify web player using React. This took me about 3 weeks as I was incredibly new to both front end design, but through this project, I learned so much about what web development really is. The next project I worked on was an augmented reality app for Android that turns sample textbook pages into interactive AR demos. I had some experience with AR from a club at my university that taught me how to use Unity and Vuforia engine. This project took me about 3 weeks to make, and I ended up with an Android app and an accompanying website.\n\nFrom posting about these two projects on LinkedIn, a high school friend reached out to me in late June to help work as a front end developer for his startup. This company was tiny with less than 10 employees and had no products on the market, but I took the opportunity to learn how to work with a team. Even working at such a small operation, I learned so many implicit skills that would prove to be essential in software dev. \n\nWhen I came back to school in the fall, I was able to land a position at a company called AGCO working as an augmented reality intern. AGCO is by no means a tech company, but they were trying to reach into immersing technology like AR. When I got there, I did my work to prove what I was capable of until I got used to working at an established company. Once I was comfortable, I tried to use my confidence to propose new directions to take their projects. Having proved that I was willing to work hard and think outside the box, AGCO quickly promoted me to a lead intern role, where I could use my creativity to impact larger decisions on the direction of our projects. Within 3 months of working part time at AGCO, while taking some of the most difficult classes (like systems engineering) in school, I felt like I was ready to be a part of a top tech company like Amazon.\n\nI was shocked when I landed an interview. Even after spending tens of hours practicing LeetCode problems to prepare, I was still nervous going into my interview. During the call, I told the Amazon employee honestly about my experience. I shared what had happened to my internship prospects last summer, and what I did to turn around. I did my best to convey my technical knowledge, talking about things I knew, without trying to seem like I knew more than I really did. When it got to the coding question, I really botched my code, but I asked my interviewer for help to reach a working solution.\n\nI received my offer letter on Friday, and if I\u2019m being honest, I still have to pinch myself every day to make sure this is real. I honestly never expected to land a FAANG out of college or even ever, but I guess the pressure I put on myself to do as much as I can worked out. If you\u2019ve read this far (thank you btw), my advice is to take any anxiety you might have towards your career, and use that to motivate yourself. Don\u2019t ever think you can\u2019t land a job you really want. You\u2019ll have to work incredibly hard to get there, but the day you reach your aspirations, it\u2019ll all be worth it. \n\nTL;DR\nI lost my summer internship in Israel because of COVID, worked on my own projects, and was able to land positions at two companies over the course of the summer and fall. From working hard and pushing myself to be better, I was able to achieve an internship at Amazon.\n\nEDIT: Here\u2019s my personal website if you want to see my projects! Danielmarks.herokuapp.com\n\nEDIT 2: Wow this blew up. Thanks for the awards kind strangers!",
        "permalink": "/r/csMajors/comments/kh1193/how_i_went_from_no_summer_internship_to_amazon_in/",
        "comments": [
            "Everyone here seems to be talking about how amazon is not that great and that is of course up for a discussion. \n\nBut man, you did an amazing job! It looks like hard work pays off after all, huh? But seriously, great job and keep on grinding! And enjoy your summer internship at amazon, I hope you\u2019ll have a great time. \n\nI am still waiting for a reply from Google STEP ( Europe area ) - hopefully I\u2019ll at least get an interview and get a chance to show them that I\u2019ve got what it takes. \n\nGreat job buddy!",
            "Bro I don\u2019t get people in this sub.  People will say salesforce is prestigious an facebook/google aren\u2019t.  People in this thread are saying Amazon isn\u2019t.  Makes no sense.  If you are happy where you are and you like the company nothing else matters.  Jealousy is also so bad like people can\u2019t get FAANG and then say faang isnt prestigious",
            "Ayee Atlanta suburb gang rise up! Congrats man, good luck in the future!",
            "How much JS did you know before working on the Spotify web player? You say you were new to front end design",
            "dude congrats!!",
            "your zipper is open in the pic of your website",
            "Congratulations! That is so wonderful. From reading your post, I can tell that you are a highly motivated and passionate individual. I'm glad that you were able to pick yourself up from the let-down that is COVID-19. Wish you all the best!",
            "Congrats, I love the vinyl stream app",
            "Congratulations! \n\nMan, there's no place quite like the suburbs of Atlanta.",
            "Thanks for the motivation man. I guess I'll start with a project soon.",
            "nicely done man, definitely a gold standard way of presenting your cs abilities imo,\n\n how much is your heroku hosting curious",
            "Took a quick glance at your projects, they look amazing.",
            "[deleted]",
            "Congrats on the offer! The vinyl player is super dope btw, its a great simple side project for showing your skills and building something others would enjoy using",
            "Stories like this gives me hope!!! - a stressed out junior with no internships yet.",
            "i hate to be that guy but i think your spotify web player is a little buggy...",
            "I actually did the onward israel program a couple years ago. While it was a blast and I have no regrets, I actually learned and contributed very little on my internship, and a lot of my peers felt the same. From a pure productivity perspective your time was better spent doing those projects, though I definitely encourage you to do birthright or travel in some other way when things open up again.",
            "I was in this same position. I went from being an Electrical Engineering major to a CS Major with an Amazon Internship this October in 6 months. But to be honest, I don't think that the Amazon internship is that great this year. You had to pass a simple OA - to which some people uploaded solutions online later on in the cycle - and then a 45 minute final round with LC hard on the easier side, which had a 30-40% pass rate.\n\nAmazon was the only \"prestigious\" company that even interviewed me this year. I got auto rejected by Google, Facebook, Apple, Stripe, Robinhood, etc. I really think that Amazon should be taken out of the acronym. Their new grad return offer salary for Seattle isn't even on par with the other FAANGs.\n\nI feel like I spent all of this effort doing interview preparation and working on side projects and only ended up with an offer from a company that likes to overwork their new grads and then PIP them before the 2-year stock vesting completes. Feels kinda bad.",
            "[deleted]",
            "Congrats, When did you apply for amazon and when are you going to start?",
            "How much does it pay?",
            "You did a very good job. Btw, how many LeetCode problems did you solve before going to the interview?",
            "Were you in NFTY? I'm a junior from the same area and know someone who went to UIUC.",
            "  \n\nHi,\n\nMathWorks has an amazing opening for the position of  Aero Auto Market Segmentation Internship. Deadline is open. Check out more information here [ https://www.biginternships.com/internship/mathworks-natick-ma-2-aero-auto-market-segmentation-internship/ ](https://www.reddit.com/r/csMajors/comments/kh1193/how_i_went_from_no_summer_internship_to_amazon_in/%20https:/www.biginternships.com/internship/mathworks-natick-ma-2-aero-auto-market-segmentation-internship/%20%20%20)\\#college #university #student #internship #biginternships",
            "Nice job man amazon is faang and the ppl who say otherwise r just salty",
            "Your projects look awesome dude! They really show your passion for the field and truly show your dedication. Congrats on the internship offer! I'm also gonna be interning at Amazon this summer, I hope we can get in touch then!"
        ]
    },
    {
        "post_id": "ioqojc",
        "author": "Coderizer",
        "title": "Github Students pack (free digital items worth 200k for CS students)",
        "url": "https://www.reddit.com/r/csMajors/comments/ioqojc/github_students_pack_free_digital_items_worth/",
        "score": 426,
        "num_comments": 25,
        "created_utc": 1599558179.0,
        "selftext": "Just wanted to drop this here for students who haven't claimed their pack yet.\n\nhttps://education.github.com/pack",
        "permalink": "/r/csMajors/comments/ioqojc/github_students_pack_free_digital_items_worth/",
        "comments": [
            "Dang I verified my student account thinking that I would actually get a real github backpack lol...",
            "an extremely useful offer included in the pack for people interested in learning JS is 6 month subscription to Frontend Masters, The content on this website is one of the best on the internet for JS imo.",
            "Bunch of this stuff is really useful (especially the free server credits and domain names)",
            "also jet brains and autodesk also gives free student licenses!!",
            "Thanks man much appreciated",
            "What\u2019s in the pack?",
            "Thank you so much  man !!",
            "Thanks! This is awesome!\n\nDoes anybody know what the K-12 AWS Educate program would be like? Would it be lectures or is it online assignments?",
            "Thanks you are the best",
            "A lot of them have an expiry date. \n\nCan op explain how it works? \nIs it counted since the application or after we actually start using it?",
            "[deleted]",
            "i keep getting rejected :(",
            "So all of these are accessible for any college student?"
        ]
    },
    {
        "post_id": "1c6i0he",
        "author": "bubbaburn",
        "title": "After 9 Months, my internship struggle has ended! \ud83c\udf89",
        "url": "https://i.redd.it/v79btza773vc1.jpeg",
        "score": 430,
        "num_comments": 62,
        "created_utc": 1713380264.0,
        "selftext": "It literally wasn\u2019t even from any of the applications I submitted. I got the opportunity for an interview through networking. ",
        "permalink": "/r/csMajors/comments/1c6i0he/after_9_months_my_internship_struggle_has_ended/",
        "comments": [
            "Seems like referrals might be the move, only if I could network",
            "Congrats \ud83d\udc4f  Celebrate with your fam not on reddit :3",
            "Respect the hustle. Congratulations",
            "nowadays thats rly the only good shot anyone has is getting some networking to secure shit",
            "the power of referalls!",
            "Well deserved!",
            "Sponsorship or citizen? Cuz damn.",
            "Congratulations \ud83c\udf89",
            "this is great info!",
            "True, I didn\u2019t even have a bachelors degree but I got an IT job in fintech because of a referral",
            "This post should be pinned to the top of this sub. Congratulations",
            "I applied to like 8 but got offered a role as a network engineer which will look good for maybe a future DevOps role . I think going forward especially with the workflow production from AI, small medium size companies will want people who can wear many hats",
            "Respect\u00a0",
            "How do you all track this\nI mean how do you track it from beginning to the  end?",
            "company name?\n\nif comfortable to disclose",
            "Which country is that?",
            "Networking how so to get the referral?",
            "Which country?",
            "Congrats! Your numbers were similar to mine",
            "How do you network?",
            "how did you get the referral?",
            "What kind of projects did you have.",
            "Congrats \ud83d\udc4f\ud83d\udc4f\ud83d\udc4f You\u2019ve done a great job \ud83d\udc4d",
            "What app are you using for tracking and the chart?",
            "this is so strange to me. How did you find 654 internships? If you meant to say that and regular jobs then please correct yourself in the title."
        ]
    },
    {
        "post_id": "1aksouj",
        "author": "akillas3000",
        "title": "Job postings are down 15% over the past year, plummeting 31% in finance and 44% in software development roles, per Indeed.",
        "url": "https://www.reddit.com/r/csMajors/comments/1aksouj/job_postings_are_down_15_over_the_past_year/",
        "score": 423,
        "num_comments": 109,
        "created_utc": 1707274682.0,
        "selftext": "Well....",
        "permalink": "/r/csMajors/comments/1aksouj/job_postings_are_down_15_over_the_past_year/",
        "comments": [
            "Me switching to cs after failing to get a job in finance: \ud83e\uddcd\ud83c\udffd\u200d\u2642\ufe0f",
            "Is it bad that knowing another field (finance) is also struggling makes me feel better \ud83d\udc80",
            "how long will this trend keep up? What can we expect for companies hiring new grads in 2024",
            "Now I'm waiting for the guy: \"nahh if you are senior it's ok\"",
            "It was an interview on CNBC but this is a reputable source",
            "Hmm I'm a freshman should I jump ship to engineering? Lol",
            "Soo are they coming back or..",
            "afterthought resolute squalid snails bike summer pie complete hat close\n\n *This post was mass deleted and anonymized with [Redact](https://redact.dev)*",
            "Let me bring some positive light in the picture.  \n\n\nThe latest results from Meta and Amaazon. If you do some due diligence on Linkedin you can see these companies have started hiring recruiters in the past few months.  \n\n\nWhat does that tell us? They are expecting hiring to re-start. First movers will pick-up the talent which was let go in the past year or two.  \n\n\nWhat other companies like to do when the big tech companies start doing something? That's right they copy.  \n\n\nMy personal opinion is - with the interest rate cuts expected this year (yes may not go down to 0% sure), companies will start hiring again and return to gradual growth again.",
            "Then what field are those 300k added jobs last month ?",
            "Do you have source?",
            "44% down from like double in 2021, right?",
            "so is it over for us? like are we just fucked?",
            "Learn a trade lads it\u2019s the only place there\u2019s reliable money now (speaking as an intermediate developer who is now going to trade school)",
            "Are down from what? Are you in CS or in journalism?!",
            "Compare 2023 with 2019",
            "Maybe Indeed is out of vogue. Maybe another service has become more popular. Maybe Indeed changed their classifications.",
            "Not sure what to believe, the propaganda posted by most of the major news outlets or random Reddit posts.",
            "Not sure how accurate this is but it seems to suggest the trend is reversing \n\nhttps://www.trueup.io/job-trend\n\nMaybe companies stopped posting on indeed?",
            "\ud83e\udde2",
            "Bro please don't start doing this I just signed up for the college major\ud83d\ude4f\ud83d\ude2d",
            "PLC programming is wide open."
        ]
    },
    {
        "post_id": "186mw8q",
        "author": "Skytwins14",
        "title": "I think Leetcode made me a worse programmer",
        "url": "https://www.reddit.com/r/csMajors/comments/186mw8q/i_think_leetcode_made_me_a_worse_programmer/",
        "score": 423,
        "num_comments": 65,
        "created_utc": 1701255840.0,
        "selftext": "As the title said. I grinded Leetcode for a few months now and solved almost 1k questions. Right now I am not thinking at all while writing code and am using just my intuition writing algorithms and checking for edge cases.\n\nThis also translate to projects for university or personal ones, where I just write code without any thoughts. For now it is ok, but I think for more complex applications this could not end well.\n\nOh and leetcode discourages you to used methods. The runtime is quicker if everything is in a nested loop.",
        "permalink": "/r/csMajors/comments/186mw8q/i_think_leetcode_made_me_a_worse_programmer/",
        "comments": [
            "You aren't worse you are just developing [type 1](https://thedecisionlab.com/reference-guide/philosophy/system-1-and-system-2-thinking) thinking instead of type 2. This is part of the natural development of expertise. The same way a calculus teacher who's been teaching calc 1 for years can just...solve a problem absent mindedly. The way a chess player can see 5 moves ahead without thinking about it, they've played this board before. The way a doctor looks at a patient and knows the diagnosis before laying hands. You still have your type 2 thinking, but you need it less frequently.",
            "I solved 1500 coding puzzles on codewars. Not a single potential employer cared",
            "You are not practicing well. Write out the algorithm in comments before you start coding. Try to use helper methods and good practices where you can. Maybe manually trace through a testcase, even if you know your solution will work. Practice like how you want to perform.",
            "If you actually solve LC problems without having to think then you are solving way too easy problems. Load up your practice with more mediums and hards.",
            "any example ?",
            "When you people say \"solve\" a problem do you actually think about the proof of correctness of an algorithm(which is ultimately the fun part for me but not required by the company) or do you just \"reduce\" it to some known problem for which you already know the algorithm( without proof of course)? \nMany say \"Hey I solved Rubiks cube\" but in reality they are just running the algorithm from Wikipedia without understanding why it works or how to arrive at it from scratch. Same way \" Hey I solved shortest path\" which actually means \"wrote the code for Dijkstras algorithm\". In reality the key insight behind Dijkstras algorithm is the actual clever part and one which evaded a lot of minds before Dijkstra. Of course no company needs all these.\nIf you are actually coming with algo on your own then great job and forgive me for doubting your aptitude. Else please dont use the word \"solve\". Instead  \"coded\"  or \"executed\" is more apt. I have seen a lot of my friend use \"solve\" wrongly. They are still hired by Amazon etc.. but never know why some algorithm even works. Just curious if this is the case with many.\n\nAs a last simple example, everybody knows loop in a linked list algo. Can you prove why the algo even terminates? Why couldn't it be the case that both fast and slow pointers keep moving one beside other forever without meeting?",
            "You dont have to worry about that when you have a job mostly because you need to write tests for your implementations.",
            "Developing your sixth sense as a programmer is important.  Having an intuition about edge cases is a great skill.  Obviously not useful if you get a job writing onButtonPress() all day, but if you get a cool job, it'll come in handy.",
            "Leetcode isn\u2019t designed to make you a better programmer. It\u2019s designed to make you a better problem solver. If you approach it this way, I think you\u2019ll find it more enjoyable & helpful. (Also ofc it\u2019s just a weed out for many top companies, so still important to know)",
            "Dude WTH you talking about. Leetcode made you better. That\u2019s exactly what you do when you become an expert on stuff. The ultimate goal and purpose of leetcode is for your hands to know the solution just like muscle memory so to speak. I bet now if you open a book on AI or something complex, your brain will swift through it much easily and quickly than you have before leetcode.",
            "So many people write poor code on leetcode solutions because it improves runtime. I experienced this around last year that my code quality was bad on projects. My approach to leetcode problems is to 1. Design an efficient algorithm with pen and paper 2. Implement it in language of your choice, and follow all the best practices with doing so (private methods, global variables, etc) 3. Ignore runtime and space percentages. If your algorithm is the most efficient in terms of big O, then you have the ideal solution.",
            "For 99% of developers, I think the only real benefit to practicing Leetcode would be becoming more aware of noticing and avoiding O(n\\^2) quadratic situations. \n\nLots of code contains nested for loops, often when it was expected that there would only ever be a handful of objects in a couple collections to iterate over. At some point in the future, the system scales up, or the function gets reused in some unexpected way, and the whole thing blows up.\n\nThe rest of it is rarely going to come up. You're not going to do a lot of backtracking or dynamic programming.",
            "Once you break the 1000 mark, make things more difficult for yourself. No problem writing the autopilot code. Having a solution is a good thing. But don't submit it as it is, improve it as much as you can before submitting. And then over time, try to write the improved solution from the get go by doing this entire process - autopilot pseudo code and then the optimization in your head or with pseudocode, not completely, but at least to the point that you can start out the process with clean code from the beginning. And over time try to get better at this until you can write the clean code by instinct.\n\nYou're not a worse programmer, you've actually likely improved a lot, but you may need to slow down for a while and assimilate that improvement so it becomes second nature to write code quickly and cleanly.",
            "I got bored of leetcode a d went to codeforces way better indepth questions",
            "Try hackerrank!",
            "I wandered here by accident but I am curious why grinding Leetcode is so popular on this sub. Is it some kind of requirement now for an interview?",
            "It made you better. I would be more worried if we can have empathy with end-users and do things for them, not for the God of Math or Goddess of Computer Science.",
            "It sounds like you got really good at recognizing what types of problems need what types of tools, which is incredibly useful. If you just mix that with real world experience you\u2019ll be very talented",
            "I got bored after 10 katas or so.\n\nWhat I actually intended to do is to refresh my C++ syntax knowledge, so that worked for 2 days. They don't require using lots of containers/structures, and I see some solutions don't really use approaches I like (e.g. some try to leverage LINQ, which I try to avoid in C# due to garbage collection overhead).\n\nWhat I enjoy more is something that needs architecture, some small tech design maybe, like part of a tool or game that I add, change, maybe even rewrite.\n\nLuckily I have this kind of environment and years of practice, so I was thinking today/tonight to just try random tooling and game features from scratch or in context of an existing game I have lying around. I think I'll start with some procedural generation, anything that needs more creative thinking, good configuration, and UI at the same time. ;)",
            "In interviews I tell them straight up I don't do leetcode"
        ]
    },
    {
        "post_id": "sdqlqf",
        "author": "Fun_Effective1177",
        "title": "Finally got the Offer",
        "url": "https://www.reddit.com/r/csMajors/comments/sdqlqf/finally_got_the_offer/",
        "score": 425,
        "num_comments": 63,
        "created_utc": 1643260418.0,
        "selftext": "Hey guys, I just wanted to do this post to celebrate and give back to the community.\n\nA year ago I was absolutely destroyed, I applied to hundreds of companies, did tens of OAs, had a few interviews and I failed all of them. Of the hundreds of companies only a few got back to me and I bombed absolutely all of them, from big to small (Google, Facebook, Microsoft, Amazon, Ebay, Paypal and hundreds of other companies). \n\nI was absolutely destroyed, I had dedicated so much time to Leetcode, to watching hundreds of tutorials online, I had read even more articles. Nothing worked, I felt inadecuate, I felt like I was just not good enough, I had even thought of changing majors. I failed so many OA that I can't even keep track, and each failed interview was more soul crushing that the last, I wasn't even accepted into GSOC, which was my last alternative, and I spent my summer in a melancolic state.\n\nStill I decided not to give up, I got an internship at a very small startup near me, I worked on some other projects and left Leetcode for a while to reignite my passion for coding.\n\nWhen this recruiting season arrived, I decided to once again try my best. I couldn't even get into the Final Round the last two seasons but I didn't want to give up. I grinded Leetcode (in a much MUCH smarter way), and used all of the lessons from my previous failures in order to give a better performance this go around.\n\nYesterday I finally got the internship offers from two very big companies (one being Microsoft). This might not mean much to those people who get 10 offers but to me it meant the world.\n\nIn short, I just wanted to tell everyone that is reading this to never give up, I know how hard it feels, and I know how sometimes you just wish to give up, but take a step back, relax and try your best next time and I'm sure you can do it.\n\nIf anyone wants any tips or wants to know anything, please don't hesitate to reach out (as long as it doesn't involve breaking NDA).",
        "permalink": "/r/csMajors/comments/sdqlqf/finally_got_the_offer/",
        "comments": [
            "Congrats, man. Much deserved.",
            "Congrats! Coming from a community college in the middle of nowhere in Texas is hard. Companies see my education/experience and see that I\u2019m a long shot and never proceed with me. But, I\u2019m not going to give up. No one should ever give up. Because you clearly rose to the occasion and received what you deserved. We will get somewhere eventually. While others are receiving offers in the tens, I\u2019ll happily cry over receiving just one offer anywhere. We all have to take the steps accordingly to achieve what we want. Some may have to take the shorter stairwell, and even some can take the elevator. Looks like I\u2019m just going to have to take the long stairway to success, and I will get to the top. Thanks for sharing your story! It motivates me to never give up.",
            "You said you grinded LC smarter. Can you elaborate on that?",
            "Great job!!!! Do you have any tips on how you conquered leetcode /got better at it??",
            "You deserve it mate",
            "Yissssss baby you are on fire....",
            "Killin it \ud83d\udc4f\ud83c\udffd\ud83d\udc4f\ud83c\udffd\ud83d\udc4f\ud83c\udffd",
            "Congrats man! I\u2019m also applying to tons of internships rn but tbh I\u2019m not expecting much as a community college first year. Good to see you\u2019ve finally succeeded!",
            "Ty for this! We support each other!",
            "Never give up is the key!",
            "Virtual hugs, OP!! I have been in similar shoes. Watching everyone else get what you want for years and years sucks and I\u2019m so glad you finally got your foot in the door!!! Take some much needed time to celebrate and build up your self confidence.",
            "Sincerest congrats!!!!!!!! It makes me so happy for you to read your story! \n\nYou are one badass motherfucker. Your persistence will take you far, very far. Keep applying that pressure!",
            "Meanwhile I closest I got is to have a technical manger from the company interview me (they rejected me a day later, no idea why). The worst news is that I\u2019m a junior (so it will be hard for me to get an intern position for next summer).",
            "Congrats on this . That's really a Big deal. \n\nI am a final year student and I have participated in a lot of Hackathons since start of college and I have only one (But Major) project which is in PHP. I am not as good at DSA , I don't know a lot of topics , also I keep loosing interest and consistency in it while I am trying to get good at it. Due to my achievements of winning national and International(Hackathons) , I used to think my resume is really good and It will get shortlisted anywhere but when I am actually applying at places i am not even hearing back from them . I have maybe3-4 months left for my college to end , a lot of pressure , trying to get good at DSA , failing every other time but still keeping on it. Do you think I will be able to crack it taking into consideration the time I have? Also If you have any tips I would love to have :)",
            "what were your personal projects? and what tech stacks did you use for them?",
            "Congrats bro. You deserved it. And thank you so much for the tips. It\u2019s really helpful.",
            "Happy for u!",
            "Congrats!",
            "So happy for you OP! Wish you all the best for your future.",
            "CONGRATULATIONS BUDDY!! YOU DESERVE IT!",
            "Congrats. What a tale of struggle.",
            "Congratulations! What strategies did you add to solving leetcode questions? How did you grind it in a smarter way?",
            "Congratulations bro!! This is a huge step & you should take a moment to relax & reflect on the significance of this success! I know you'll do great in your new role!",
            "what was the difference in doing LC earlier and later in a \"smart way\".",
            "Congrats, you've worked hard for that.",
            "Congratulations!",
            "Please take my late congratulations! Thanks for sharing"
        ]
    },
    {
        "post_id": "pun2i0",
        "author": "lapurita",
        "title": "isn't the leetcode standard pretty sweet?",
        "url": "https://www.reddit.com/r/csMajors/comments/pun2i0/isnt_the_leetcode_standard_pretty_sweet/",
        "score": 427,
        "num_comments": 106,
        "created_utc": 1632500070.0,
        "selftext": "Practice data structures & algorithms. Do leetcode for some months. Apply to jobs with 100k+ salaries and sooner or later get hired. Sounds pretty sweet to me. I'm not in the us though so it's not exactly like this but it sounds awesome. It is not rocket science to figure out how to solve leetcode mediums (and some hards). Imagine how BS the process is in other fields like economics or law if you want to get top jobs. The LC standard is more like a meritocracy where raw skill is tested instead of which school you went to or how good you are at licking ass and \"networking\".\n\nCome at me LC haters.",
        "permalink": "/r/csMajors/comments/pun2i0/isnt_the_leetcode_standard_pretty_sweet/",
        "comments": [
            "sounds sweet now since we've all recently taken algorithms and data structures but I imagine it would suck when you're 30+ and have to review stuff you learned 10 or more years ago just to get a job",
            "I prepared LC for weeks, then I got slammed with an interview that involved building a website and using an API and SQL end for a position that was just general \u201cSWE intern\u201d. Shit rocked my world. Obviously this was a great assessment to actually test someones skills, but I was not prepared for it",
            "It's okay. It's pretty good like you say.\n\nPeople just like to bitch anyways.\n\nHowever, smaller (non-unicorn) companies should set realistic expectations and ask less wacky ones. Especially for intern roles.",
            "I see your point but I still hate leetcode and think it's a waste of everyone's time. I got a decent job without leetcode and I'm dreading spending dozens of hours practicing these pointless problems to get my next job. The interview process is broken and disrespectful.",
            "I went from management consulting to tech. Much rather grind leetcode than perfect market sizing questions and be at the mercy of some pompous asshole\u2019s subjective opinion of how I answered the case question",
            "Leetcode is like any standardized test. Everyone is judged on similar criteria and companies use this for hiring. Similar to any standardized test you have perform well irrespective of you liking the test or not.  Sometimes these test seem irrelevant but still has to be taken because all those hiring use it.",
            "Yeah, spending all my time learning a useless skill instead of building cool stuff just sounds like the most wonderful thing in the world.\n\nIt\u2019s like the SAT, it tests you on nothing but your willingness to drill silly questions over and over again (I say this as someone who won that game, I don\u2019t want to play this next one though.)\n\nPeople who obsess over leetcode and hate on other hiring methods are those who haven\u2019t/don\u2019t want to learn skills that are actually useful. They want a simple challenge to bang their head against until they get a job their \u201cgrinding\u201d did nothing to prepare them for. The real world isn\u2019t that simple.",
            "Hater here: leetcode does not guarantee you a job and as mentioned below some companies don\u2019t ask leetcode so you can spend all your time on Leetcode and know nothing practical. Also it\u2019s just plain boring as shit",
            "Yep, coming from a mechanical engineering undergrad where you could be asked anything in your 4 year degree. Oh you forgot about that concept you covered in week 3 of fall sophmore year in thermodynamics? sucks. Oh you don't remember that fluid mechanics concept from junior year? sucks. \n\nLeetcode is literally the math professor who would give you a practice exam and have the actual exam be literally the same thing with slightly different wording and numbers. All you have to do is practice and you're fine. \n\nPeople here always complain about leetcode, but it's infinitely better than the alternative I described above. Not to mention all the different websites, videos, and resources you have access to.",
            "Leetcode is pretty great for people who aren't super serious software engineers (like don't build stuff in their free time) and only really come from an academic background. It disadvantages the more serious software engineers who are actually great coders but don't spend time learning trivial knowledge.",
            "It's fair in all honesty. I only resent it because hanging out in places like this you'll quickly get the feeling that you're a failure if you don't dedicate your life to getting the highest paying job possible. Even if dead set on them, if you still want more free time in college, it's certainly possible to space out the learning and get into these companies 3-5 years after graduation. Yeah, they'll ask system design questions - but that's after you've gotten multiple years of experience working on production software and there's books for learning system design too.",
            "It kind of inhibits you from learning cool stuff early on, like distributed systems or functional programming.",
            "Even though LC questions don't correlate that much to the job like everyone says I love the fact that it's like you say; based on meritocracy. I'm not from the US either but I find it a tad bit annoying that some people are complaining about leetcode when what's waiting on the other side is literally $100K+ salaries.",
            "LC is fine for unicorn companies and F500 but small time companies need to chill.",
            "I see where you are coming from, standardized measures can be helpful to remove bias, etc.\n\nHowever, the issue is, instead of people working on the skills they actually need for the jobs they are after (written and verbal skills, real application development, the development cycle, troubleshooting, etc), we have engineers studying something that doesn't translate at all to the real day to day of a job. It's much closer to using the SATs as an aptitude test for college (which many universities have _also_ dropped). Are some of the concepts tangentially related? Of course. But just like the SATs, all that short term prep is pointless since we're going to have to teach so much more anyway. And usually people with resources end up doing better, because like SATs, they can allocate the time to practice. Which makes it decidedly un-meritocratic.\n\nIt's also been shown repeatedly to be ineffective at determining technical proficiency, and most technical skills can absolutely be learned on the job. I'm in my 30s, I'm a lead, and it's pretty clear having worked with a variety of engineers over the years that LeetCode doesn't work in determining who makes a great coworker or teammate. There's also a ton of literature on it, worth reading.\n\nNow, that isn't to say LeetCode type questions don't have their place! Truthfully, if you've just graduated college, why not test you to see if you paid attention at the very least. But beyond fresh graduates, it stops making sense (a lot of places really do ask them for senior devs). Also, when I practice hard alrgorithm questions for fun, it's fun (for me)! During an interview, though, it's easily way more stressful than the job will ever be, especially considering we won't ever have you solve something that intense, in under 60 minutes, by yourself. If anything, we'd rather those problems be worked on collaboratively and reviewed, since good software design is collaborative.\n\nIn interviews, I'd much rather candidates have better knowledge of common design patterns, or troubleshooting skills, or practical understanding of infrastructure, more than anything.\n\nIt's why many companies, including major ones and some departments at FAANGs, are starting to drop them in favor of more practical questions. \n\nI'm always amazed reading this sub and it saddens me that we've turned the job into what is ostensibly SAT prep. \n\nFor anyone here curious:\nhttps://github.com/poteto/hiring-without-whiteboards",
            "Exactly, yes! I never understood why people bitch about LeetCode.\n\n\"Damn, bro, Google just asked me a hard LC question. This is ridiculous! I wanted this new grad role that pays more than $100K after getting a BS in Computer Science, and these fuckers ask me a hard LC question.\"  Seriously? Just shut the fuck up.",
            "Nah fuck leetcode, grinded months of it 'cause FAANG' and hated every second of it. Now interviewing at a few companies that have either take home assessments or 'code a small application with whatever web framework you want' interview and having a blast!",
            "\"Come at me LC haters\"\n\nWhy does it always have to end in a fight of some sort. Can you not just state your opinion, why do we always have to fight and to be proven right. Internet really messed us up.",
            "Yes exactly, the only people complaining about leetcode just straight up don't want to work hard",
            "Agree I think LC is awesome!",
            "LC is sweet for those privileged to have time to study.",
            "It doesn\u2019t really work like that.\n\nI\u2019d all you can do is leetcode, you might fluke the interview, but you\u2019ll struggle to keep the job, as the job ain\u2019t leetcode.",
            "That's true, too bad it also influences the problems they ask at an interview. Wish we could eliminate luck all together.",
            "It\u2019s not that easy. LC questions is just a part of the interview process. There are other questions that will assess a candidate\u2019s technical background. This is why having internships or at least some projects to talk about is also important.",
            "I grinded leetcode to get an internship this past summer then when I realized 80% of the job was reading the codebase and learning how it worked I wish they had tested me on that so I would\u2019ve studied it",
            "im not feeling confident while solving problem in leetcode i get demotivated its just like i eating a rock. to be real idk data structure to begin with . i know array and list but i dont how to and when to use",
            "I totally agreed with this post until you claimed LC questions test raw skill. Beyond being able to work under pressure, LC has so little to do with skill\u2014it\u2019s literally just grinding lol.",
            "(I\u2019m not saying this to OP specifically, but the subreddit in general.)\n\nBeen many years since university but I remember why I hated almost everyone else in my major - they were one-dimensional try-hards with repugnant social manners.\n\nDo your best at programming. Work hard at it. But make some friends along the way. Care about other people.\n\nOnly 1/1000 people get to be unicorn developers, but the programmers who do next best in their careers are the ones with social skills. Unicorns with social graces are incredible.\n\nSpend some time away from your compiler. Find other interests. Find people you think are cool and be friends. Practice talking to people you don\u2019t know and try to find something interesting about them.",
            "It sucks for hirers because it doesn't actually tell them shit about whether you really can do the job or not. On second thought, it actually sucks for us too because you can be an expert that can actually get the work done, but don't remember leetcoding very well. Anyways, it is just a couple of months of constant grinding to catch up. So yeah.",
            "What sounds sweet to me is in my sisters field (military security) when she was ready to find a new job, all she had to do was slap down her resume, people were like..oh shite look at all this experience, interview was mostly to determine if the role was a good fit, her resume spoke for itself so she didnt have to prove herself, and boom job offers.\n\nIn this field, doesnt matter if you have 1yr or 10yrs experience, you are still going through rounds and hoops proving you know what you know.  Its only great when you are new....like you said, cram some leetcode do well enough to make it seem like you know wtf is going on and you've got a job. But when even experienced professionals have to do the same thing, thats annoying af.\n\nNot that Im at that stage of my career yet, Im only a couple years in, but I already know that when I hit 10yoe, Im going to go through the exact same process then to find a new job as I am going through now, and thats kind of lame.",
            "Not saying that I\u2019m a fan of leetcode, but it does provide a fair barrier of entry - if you put in the work, you reap the rewards $$$.\n\nDo people think companies are just gonna hand out 200k jobs for the fuck of it? There has to be some filter, otherwise it\u2019d be easy and we\u2019d all be ballin in cash.\n\nP.S. - this does not mean I think leetcode is a good measure of SWE skills. HubSpot did a great job of having a coding assessment that involved taking data from an API and aggregating users browser sessions by manipulating that data. Most enjoyable experience, way better than leetcode.",
            "I work for one of the big tech social media companies. We test 4-5 medium to hard LC problems first and if the candidate gets it right we ask him some mathematical problems and see his logic in solving it. The process is getting harder to the point we started asking for mathematical proof of correctness which usually requires mathematics and advanced algorithms knowledge.",
            "Developer here with 15 years experience.\n\nLeetcode is a good test of a very narrow set of skills; doesn\u2019t touch coding practises, design, being able todo anything with requirements etc. \n\nThe fact that people actually doing the Job don\u2019t need to solve leetcode style programming tasks every day, kind of shows you it\u2019s not really appropriate in *many* cases.\n\nIt\u2019s popular because it\u2019s simpler to administer than other types of interviews and provides a quantitative result.\n\nIt\u2019s probably better for new grads, but those with already demanding jobs, families etc, having to grind leetcode to prove that you can do a job you\u2019ve been doing for 15 years is a bit crap.",
            "It\u2019s popular because interviewers are lazy.",
            "I like LC; it\u2019s fun, but meritocracy is a dubious term  considering the education and time investment required to grind LC for a year before applying for a job. Ask yourself if this would be easier with more resources."
        ]
    }
]